config {
    dependencies: ["estoque_historico_estoque_sap_cev"],
    tags: ["sqlserver", "estoque"]
}

MERGE
  `TRUSTED.estoque_historico_estoque_sap_cev` T
USING
  (
  WITH
    TABELA AS (
    SELECT
      DISTINCT * EXCEPT (dense_rank,
        PARTITIONTIME)
    FROM (
      SELECT
        ROW_NUMBER() OVER (PARTITION BY DAT_ESTOQUE, COD_ITPROD_SAP,COD_FILIAL,COD_DEPOSITO_SAP ORDER BY PARTITIONTIME DESC) AS dense_rank,
        CAST(DAT_ESTOQUE AS TIMESTAMP) AS DAT_ESTOQUE,
        COD_ITPROD_SAP,
        CAST(COD_FILIAL AS INT64) AS COD_FILIAL,
        COD_DEPOSITO_SAP,
        CAST(QTD_DISPONIVEL AS INT64) AS QTD_DISPONIVEL,
        CAST(QTD_TRANSITO AS INT64) AS QTD_TRANSITO,
        CAST(VAL_PMM AS NUMERIC) AS VAL_PMM,		
        PARTITIONTIME
      FROM (
        SELECT
          DISTINCT A.*
        FROM
          `RAW.estoque_historico_estoque_sap_cev` A))
    WHERE
      dense_rank = 1 )
  SELECT
    *
  FROM
    TABELA) S
ON
  T.DAT_ESTOQUE = S.DAT_ESTOQUE
  AND T.COD_ITPROD_SAP = S.COD_ITPROD_SAP
  AND T.COD_FILIAL = S.COD_FILIAL
  AND T.COD_DEPOSITO_SAP = S.COD_DEPOSITO_SAP
  WHEN MATCHED THEN UPDATE SET 
  T.DAT_ESTOQUE = S.DAT_ESTOQUE,  
  T.COD_ITPROD_SAP = S.COD_ITPROD_SAP, 
  T.COD_FILIAL = S.COD_FILIAL, 
  T.COD_DEPOSITO_SAP = S.COD_DEPOSITO_SAP, 
  T.QTD_DISPONIVEL = S.QTD_DISPONIVEL, 
  T.QTD_TRANSITO = S.QTD_TRANSITO,
  T.VAL_PMM = S.VAL_PMM 
  WHEN NOT MATCHED
  THEN
INSERT
  ( DAT_ESTOQUE, 
    COD_ITPROD_SAP,
    COD_FILIAL,
    COD_DEPOSITO_SAP,
    QTD_DISPONIVEL,
    QTD_TRANSITO,
	  VAL_PMM
	)
VALUES
  ( S.DAT_ESTOQUE, 
    S.COD_ITPROD_SAP, 
    S.COD_FILIAL, 
    S.COD_DEPOSITO_SAP, 
    S.QTD_DISPONIVEL, 
    S.QTD_TRANSITO,
    S.VAL_PMM )
  WHEN NOT MATCHED BY SOURCE
  THEN
DELETE
  ;
