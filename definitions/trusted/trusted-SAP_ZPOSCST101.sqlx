config {
    dependencies: ["SAP_ZPOSCST101"],
    tags: ["sap"]
}

MERGE
  `TRUSTED.SAP_ZPOSCST101` T
USING
  (
  WITH
    TABELA AS (
    SELECT
      DISTINCT werks,
      mandt,
      cdsis,
      nupdv,
      tpopr,
      mvend,
      dtopr,
      ntran,
      nlote,
      cod_operador01,
      nome_operador01,
      hr_transacao01,
      qtde_itens01,
      qtde_fp01,
      serie_cupom_nf,
      subseries,
      id_consumidor01,
      cod_consumidor01,
      tp_doc_consuo1,
      doc_consumidor01,
      waers01,
      vlr_liquido01,
      vlr_bruto01,
      tp_desconto01,
      vlr_desconto01,
      tp_acrescimo01,
      vlr_acrescimo01,
      tp_despesas01,
      vlr_despesas01,
      tp_frete01,
      vlr_frete01,
      cod_transport01,
      cod_cancelamen01,
      docnum,
      cod_sist_auto01,
      dt_inclusao,
      hr_inclusao,
      nfe01,
      versao01,
      fg_bloqlote,
      cliente_fidel,
      recordstamp
    FROM
        `RAW.SAP_ZPOSCST101` A
    WHERE
      PARTITIONTIME=(
      SELECT
        MAX(PARTITIONTIME)
      FROM
        `RAW.SAP_ZPOSCST101`))
  SELECT
    *
  FROM
    TABELA) S
ON
  T.werks = S.werks
  WHEN MATCHED THEN UPDATE SET 
  T.mandt = S.mandt,
  T.werks = S.werks,
  T.cdsis = S.cdsis,
  T.nupdv = S.nupdv,
  T.tpopr = S.tpopr,
  T.mvend = S.mvend,
  T.dtopr = S.dtopr,
  T.ntran = S.ntran,
  T.nlote = S.nlote,
  T.cod_operador01 = S.cod_operador01,
  T.nome_operador01 = S.nome_operador01,
  T.hr_transacao01 = S.hr_transacao01,
  T.qtde_itens01 = S.qtde_itens01,
  T.qtde_fp01 = S.qtde_fp01,
  T.serie_cupom_nf = S.serie_cupom_nf,
  T.subseries = S.subseries,
  T.id_consumidor01 = S.id_consumidor01,
  T.cod_consumidor01 = S.cod_consumidor01,
  T.tp_doc_consuo1 = S.tp_doc_consuo1,
  T.doc_consumidor01 = S.doc_consumidor01,
  T.waers01 = S.waers01,
  T.vlr_liquido01 = S.vlr_liquido01,
  T.vlr_bruto01 = S.vlr_bruto01,
  T.tp_desconto01 = S.tp_desconto01,
  T.vlr_desconto01 = S.vlr_desconto01,
  T.tp_acrescimo01 = S.tp_acrescimo01,
  T.vlr_acrescimo01 = S.vlr_acrescimo01,
  T.tp_despesas01 = S.tp_despesas01,
  T.vlr_despesas01 = S.vlr_despesas01,
  T.tp_frete01 = S.tp_frete01,
  T.vlr_frete01 = S.vlr_frete01,
  T.cod_transport01 = S.cod_transport01,
  T.cod_cancelamen01 = S.cod_cancelamen01,
  T.docnum = S.docnum,
  T.cod_sist_auto01 = S.cod_sist_auto01,
  T.dt_inclusao = S.dt_inclusao,
  T.hr_inclusao = S.hr_inclusao,
  T.nfe01 = S.nfe01,
  T.versao01 = S.versao01,
  T.fg_bloqlote = S.fg_bloqlote,
  T.cliente_fidel = S.cliente_fidel,
  T.recordstamp = S.recordstamp
  WHEN NOT MATCHED
  THEN
INSERT
  ( mandt,
    werks,
    cdsis,
    nupdv,
    tpopr,
    mvend,
    dtopr,
    ntran,
    nlote,
    cod_operador01,
    nome_operador01,
    hr_transacao01,
    qtde_itens01,
    qtde_fp01,
    serie_cupom_nf,
    subseries,
    id_consumidor01,
    cod_consumidor01,
    tp_doc_consuo1,
    doc_consumidor01,
    waers01,
    vlr_liquido01,
    vlr_bruto01,
    tp_desconto01,
    vlr_desconto01,
    tp_acrescimo01,
    vlr_acrescimo01,
    tp_despesas01,
    vlr_despesas01,
    tp_frete01,
    vlr_frete01,
    cod_transport01,
    cod_cancelamen01,
    docnum,
    cod_sist_auto01,
    dt_inclusao,
    hr_inclusao,
    nfe01,
    versao01,
    fg_bloqlote,
    cliente_fidel,
    recordstamp )
VALUES
  ( S.mandt,
    S.werks,
    S.cdsis,
    S.nupdv,
    S.tpopr,
    S.mvend,
    S.dtopr,
    S.ntran,
    S.nlote,
    S.cod_operador01,
    S.nome_operador01,
    S.hr_transacao01,
    S.qtde_itens01,
    S.qtde_fp01,
    S.serie_cupom_nf,
    S.subseries,
    S.id_consumidor01,
    S.cod_consumidor01,
    S.tp_doc_consuo1,
    S.doc_consumidor01,
    S.waers01,
    S.vlr_liquido01,
    S.vlr_bruto01,
    S.tp_desconto01,
    S.vlr_desconto01,
    S.tp_acrescimo01,
    S.vlr_acrescimo01,
    S.tp_despesas01,
    S.vlr_despesas01,
    S.tp_frete01,
    S.vlr_frete01,
    S.cod_transport01,
    S.cod_cancelamen01,
    S.docnum,
    S.cod_sist_auto01,
    S.dt_inclusao,
    S.hr_inclusao,
    S.nfe01,
    S.versao01,
    S.fg_bloqlote,
    S.cliente_fidel,
    S.recordstamp );
