config {
    dependencies: ["distribuicao_filial_lb"],
    tags: ["sqlserver", "distribuicao", "cubo-filiais"]
}

MERGE
  `TRUSTED.distribuicao_filial_lb` T
USING
  (
  WITH
    TABELA AS (
    SELECT
      DISTINCT CAST(COD_FILIAL AS INT64) AS COD_FILIAL,
      NOM_FILIAL,
      CAST(DAT_ABERTURA AS TIMESTAMP) AS DAT_ABERTURA,
      UF,
      CIDADE,
      MODELO_DE_NEGOCIO,
      CAST(PROJETO AS INT64) AS PROJETO,
      CAST(APTIDAO_NEGOCIO AS INT64) AS APTIDAO_NEGOCIO,
      CAST(BLOQUEIO_LOJA AS INT64) AS BLOQUEIO_LOJA,
      VOLTAGEM,
      VOLTAGEM_PRINCIPAL,
      CAST(DAT_ATUALIZACAO AS TIMESTAMP) AS DAT_ATUALIZACAO
    FROM
      `RAW.distribuicao_filial_lb` A
    WHERE
      PARTITIONTIME=(
      SELECT
        MAX(PARTITIONTIME)
      FROM
        `RAW.distribuicao_filial_lb`))
  SELECT
    *
  FROM
    TABELA) S
ON
  T.COD_FILIAL = S.COD_FILIAL
  WHEN MATCHED THEN UPDATE SET 
  T.COD_FILIAL = S.COD_FILIAL,
  T.NOM_FILIAL = S.NOM_FILIAL,
  T.DAT_ABERTURA = S.DAT_ABERTURA,
  T.UF = S.UF,
  T.CIDADE = S.CIDADE,
  T.MODELO_DE_NEGOCIO = S.MODELO_DE_NEGOCIO,
  T.PROJETO = S.PROJETO,
  T.APTIDAO_NEGOCIO = S.APTIDAO_NEGOCIO,
  T.BLOQUEIO_LOJA = S.BLOQUEIO_LOJA,
  T.VOLTAGEM = S.VOLTAGEM,
  T.VOLTAGEM_PRINCIPAL = S.VOLTAGEM_PRINCIPAL,
  T.DAT_ATUALIZACAO = S.DAT_ATUALIZACAO
  WHEN NOT MATCHED
  THEN
INSERT
  ( COD_FILIAL,
    NOM_FILIAL,
    DAT_ABERTURA,
    UF,
    CIDADE,
    MODELO_DE_NEGOCIO,
    PROJETO,
    APTIDAO_NEGOCIO,
    BLOQUEIO_LOJA,
    VOLTAGEM,
    VOLTAGEM_PRINCIPAL,
    DAT_ATUALIZACAO )
VALUES
  ( S.COD_FILIAL,
    S.NOM_FILIAL,
    S.DAT_ABERTURA,
    S.UF,
    S.CIDADE,
    S.MODELO_DE_NEGOCIO,
    S.PROJETO,
    S.APTIDAO_NEGOCIO,
    S.BLOQUEIO_LOJA,
    S.VOLTAGEM,
    S.VOLTAGEM_PRINCIPAL,
    S.DAT_ATUALIZACAO )
  ;
