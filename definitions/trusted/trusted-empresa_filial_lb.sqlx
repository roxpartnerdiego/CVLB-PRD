config {
    dependencies: ["empresa_filial_lb"],
    tags: ["sqlserver", "empresa"]
}

MERGE
  `TRUSTED.empresa_filial_lb` T
USING
  (
  WITH
    TABELA AS (
    SELECT
      DISTINCT CAST(COD_FILIAL AS int64) AS COD_FILIAL,
      NOME_FILIAL,
      ENDERECO,
      CEP,
      CIDADE,
      ORG_COMPRA,
      UF,
      CTG_CENTRO,
      REGIAO_DE_VENDAS,
      CAST(DAT_ABERTURA AS TIMESTAMP) AS DAT_ABERTURA,
      CAST(DAT_FECHAMENTO AS TIMESTAMP) AS DAT_FECHAMENTO,
      CAST(DAT_ATUALIZACAO AS TIMESTAMP) AS DAT_ATUALIZACAO
    FROM
      `RAW.empresa_filial_lb` A
    WHERE
      PARTITIONTIME=(
      SELECT
        MAX(PARTITIONTIME)
      FROM
        `RAW.empresa_filial_lb`) )
  SELECT
    *
  FROM
    TABELA ) S
ON
  T.COD_FILIAL = S.COD_FILIAL
  WHEN MATCHED THEN UPDATE SET T.COD_FILIAL = S.COD_FILIAL, T.NOME_FILIAL = S.NOME_FILIAL, T.ENDERECO = S.ENDERECO, T.CEP = S.CEP, T.CIDADE = S.CIDADE, T.ORG_COMPRA = S.ORG_COMPRA, T.UF = S.UF, T.CTG_CENTRO = S.CTG_CENTRO, T.REGIAO_DE_VENDAS = S.REGIAO_DE_VENDAS, T.DAT_ABERTURA = S.DAT_ABERTURA, T.DAT_FECHAMENTO = S.DAT_FECHAMENTO, T.DAT_ATUALIZACAO = S.DAT_ATUALIZACAO
  WHEN NOT MATCHED
  THEN
INSERT
  ( COD_FILIAL,
    NOME_FILIAL,
    ENDERECO,
    CEP,
    CIDADE,
    ORG_COMPRA,
    UF,
    CTG_CENTRO,
    REGIAO_DE_VENDAS,
    DAT_ABERTURA,
    DAT_FECHAMENTO,
    DAT_ATUALIZACAO )
VALUES
  ( S.COD_FILIAL,S.NOME_FILIAL,S.ENDERECO,S.CEP,S.CIDADE,S.ORG_COMPRA,S.UF,S.CTG_CENTRO,S.REGIAO_DE_VENDAS,S.DAT_ABERTURA,S.DAT_FECHAMENTO,S.DAT_ATUALIZACAO )
  WHEN NOT MATCHED BY SOURCE
  THEN
DELETE
  ;
