config {
	dependencies: ["oms_order_items_cev"],
	tags: ["postgresql"]
}

MERGE
`TRUSTED.oms_order_items_cev` T 
USING
(
WITH
TABELA AS (
SELECT
DISTINCT id,
	CAST(order_id AS INT64) AS order_id,
	CAST(item_sequence AS INT64) AS item_sequence,
	sku_cev,
	sku_seller,
	ean,
	name ,
	CAST(quantity AS INT64) AS quantity  ,
	CAST(price AS numeric) AS price  ,
	CAST(total_price AS numeric) AS total_price  ,
	CAST(shipping_cost AS numeric) AS shipping_cost ,
	CAST(discount AS numeric) AS discount  ,
	discount_name,
	image_url,
	CAST(cancel_quantity AS INT64) AS cancel_quantity,
	CAST(cancel_date AS TIMESTAMP) AS cancel_date,
	CAST(cancel_order AS INT64) AS cancel_order,
	cancel_detail,
	CAST(unity_price AS numeric) AS unity_price
FROM
`RAW.oms_order_items_cev` A 
WHERE
PARTITIONTIME=(
SELECT
	MAX(PARTITIONTIME) 
FROM
	`RAW.oms_order_items_cev`))
SELECT
*
FROM
TABELA) S
ON
T.id = S.id
WHEN MATCHED THEN UPDATE SET   
		T.id = S.id,
		T.order_id = S.order_id,
		T.item_sequence = S.item_sequence,
		T.sku_cev = S.sku_cev,
		T.sku_seller = S.sku_seller,
		T.ean = S.ean,
		T.name = S.name,
		T.quantity = S.quantity,
		T.price = S.price,
		T.total_price = S.total_price,
		T.shipping_cost = S.shipping_cost,
		T.discount = S.discount,
		T.discount_name = S.discount_name,
		T.image_url = S.image_url,
		T.cancel_quantity = S.cancel_quantity,
		T.cancel_date = S.cancel_date,
		T.cancel_order = S.cancel_order,
		T.cancel_detail  = S.cancel_detail,
		T.unity_price = S.unity_price
WHEN NOT MATCHED 
THEN
INSERT 
(  id,
	order_id,
	item_sequence,
	sku_cev,
	sku_seller,
	ean,
	name,
	quantity,
	price,
	total_price,
	shipping_cost,
	discount,
	discount_name,
	image_url,
	cancel_quantity,
	cancel_date,
	cancel_order,
	cancel_detail ,
	unity_price ) 
VALUES
(
	S.id,
	S.order_id,
	S.item_sequence,
	S.sku_cev,
	S.sku_seller,
	S.ean,
	S.name,
	S.quantity,
	S.price,
	S.total_price,
	S.shipping_cost,
	S.discount,
	S.discount_name,
	S.image_url,
	S.cancel_quantity,
	S.cancel_date,
	S.cancel_order,
	S.cancel_detail ,
	S.unity_price ) 
WHEN NOT MATCHED BY SOURCE
THEN
DELETE 
;